// <auto-generated />
using System;
using FCDBApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FCDBApi.Migrations
{
    [DbContext(typeof(InspectionContext))]
    [Migration("20240723084708_AddPartsList")]
    partial class AddPartsList
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FCDBApp.Models.Document", b =>
                {
                    b.Property<int>("DocumentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentID"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentCategoryID")
                        .HasColumnType("int");

                    b.Property<byte[]>("DocumentData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DocumentID");

                    b.HasIndex("DocumentCategoryID");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("FCDBApp.Models.DocumentCategory", b =>
                {
                    b.Property<int>("DocumentCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentCategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentCategoryID");

                    b.ToTable("DocumentCategories");
                });

            modelBuilder.Entity("FCDBApp.Models.InspectionCategories", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("InspectionCategories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Load Mission Disc and Log to Vehicle"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "General Security Conditions"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Trunk Normal/Depot Mode Tests"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Trunk Unit Checks"
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryName = "TrunkMode/Trunk Setting Test"
                        },
                        new
                        {
                            CategoryID = 6,
                            CategoryName = "Return to Depot Mode Test"
                        },
                        new
                        {
                            CategoryID = 7,
                            CategoryName = "H&S"
                        },
                        new
                        {
                            CategoryID = 8,
                            CategoryName = "Depot Mode Settings"
                        });
                });

            modelBuilder.Entity("FCDBApp.Models.InspectionDetails", b =>
                {
                    b.Property<int>("InspectionDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InspectionDetailID"));

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InspectionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InspectionItemID")
                        .HasColumnType("int");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InspectionDetailID");

                    b.HasIndex("InspectionID");

                    b.HasIndex("InspectionItemID");

                    b.ToTable("InspectionDetails");
                });

            modelBuilder.Entity("FCDBApp.Models.InspectionItems", b =>
                {
                    b.Property<int>("InspectionItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InspectionItemID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("InspectionTypeID")
                        .HasColumnType("int");

                    b.Property<string>("InspectionTypeIndicator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InspectionItemID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("InspectionTypeID");

                    b.ToTable("InspectionItems");

                    b.HasData(
                        new
                        {
                            InspectionItemID = 1,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "134",
                            ItemDescription = "Open escape hatch check that the alarm sounds and engine immobilised"
                        },
                        new
                        {
                            InspectionItemID = 2,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Check engine won't start when immobiliser key is vertical"
                        },
                        new
                        {
                            InspectionItemID = 3,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Check 112/160 meters immobilised and alarms operates at correct distance"
                        },
                        new
                        {
                            InspectionItemID = 4,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "134",
                            ItemDescription = "Check all off mode escape hatches overlock"
                        },
                        new
                        {
                            InspectionItemID = 5,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "14",
                            ItemDescription = "Check pavement alarm system"
                        },
                        new
                        {
                            InspectionItemID = 6,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "134",
                            ItemDescription = "Check bulk head door locks are secure and immobilises when open"
                        },
                        new
                        {
                            InspectionItemID = 7,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "4",
                            ItemDescription = "Check and record date/time on computer. Reset if needed"
                        },
                        new
                        {
                            InspectionItemID = 8,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "134",
                            ItemDescription = "Check and record date and time on Finger scanner"
                        },
                        new
                        {
                            InspectionItemID = 9,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Check PQ bolts on outside of the door, operate alarm with 15mm+10mm of thread showing"
                        },
                        new
                        {
                            InspectionItemID = 10,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Check PQ internal bolts operate alarm when released"
                        },
                        new
                        {
                            InspectionItemID = 11,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Check Escape Hatch shoot bolt test activates alarm and remote panel LED"
                        },
                        new
                        {
                            InspectionItemID = 12,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Transfer Hatch locks"
                        },
                        new
                        {
                            InspectionItemID = 13,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "1234",
                            ItemDescription = "Check red Hijack buttons operate - GPS Tracking"
                        },
                        new
                        {
                            InspectionItemID = 14,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "1234",
                            ItemDescription = "Press green siren only button, alarm activates when button latches in and stops when button is out"
                        },
                        new
                        {
                            InspectionItemID = 15,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "1234",
                            ItemDescription = "Check black vehicle track buttons, operate GPS Tracking"
                        },
                        new
                        {
                            InspectionItemID = 16,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "124",
                            ItemDescription = "Check External Door latch and cylinder"
                        },
                        new
                        {
                            InspectionItemID = 17,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "24",
                            ItemDescription = "Check red Power light under LED Panel"
                        },
                        new
                        {
                            InspectionItemID = 18,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "24",
                            ItemDescription = "Check green lamp - external door button"
                        },
                        new
                        {
                            InspectionItemID = 19,
                            CategoryID = 1,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "24",
                            ItemDescription = "Check green lamp - Access Control door"
                        },
                        new
                        {
                            InspectionItemID = 20,
                            CategoryID = 2,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "1234",
                            ItemDescription = "Glazing"
                        },
                        new
                        {
                            InspectionItemID = 21,
                            CategoryID = 2,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "1234",
                            ItemDescription = "Cab doors"
                        },
                        new
                        {
                            InspectionItemID = 22,
                            CategoryID = 2,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "134",
                            ItemDescription = "Air lock doors"
                        },
                        new
                        {
                            InspectionItemID = 23,
                            CategoryID = 2,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "1234",
                            ItemDescription = "Rear doors"
                        },
                        new
                        {
                            InspectionItemID = 24,
                            CategoryID = 2,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "4",
                            ItemDescription = "Coin Pass through unit"
                        },
                        new
                        {
                            InspectionItemID = 25,
                            CategoryID = 2,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "3",
                            ItemDescription = "Under vehicle protection incl. tail lift"
                        },
                        new
                        {
                            InspectionItemID = 26,
                            CategoryID = 2,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "134",
                            ItemDescription = "Escape Hatch operation"
                        },
                        new
                        {
                            InspectionItemID = 27,
                            CategoryID = 2,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "134",
                            ItemDescription = "Escape Hatch security"
                        },
                        new
                        {
                            InspectionItemID = 28,
                            CategoryID = 2,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "1234",
                            ItemDescription = "Alarm system"
                        },
                        new
                        {
                            InspectionItemID = 29,
                            CategoryID = 2,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "1234",
                            ItemDescription = "Vehicle immobilisation"
                        },
                        new
                        {
                            InspectionItemID = 30,
                            CategoryID = 2,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "1234",
                            ItemDescription = "GPS tracking check to ARC"
                        },
                        new
                        {
                            InspectionItemID = 31,
                            CategoryID = 2,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "14",
                            ItemDescription = "Check CCTV operative and recording"
                        },
                        new
                        {
                            InspectionItemID = 32,
                            CategoryID = 7,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "1234",
                            ItemDescription = "Fire Extinguisher"
                        },
                        new
                        {
                            InspectionItemID = 33,
                            CategoryID = 7,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "1234",
                            ItemDescription = "First Aid Box"
                        },
                        new
                        {
                            InspectionItemID = 34,
                            CategoryID = 7,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "1234",
                            ItemDescription = "Check general interior panel condition, drivers seat and cab floor mat condition"
                        },
                        new
                        {
                            InspectionItemID = 35,
                            CategoryID = 7,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "14",
                            ItemDescription = "Check entrance door grab handle fitted, condition and it is secure"
                        },
                        new
                        {
                            InspectionItemID = 36,
                            CategoryID = 8,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Shut down"
                        },
                        new
                        {
                            InspectionItemID = 37,
                            CategoryID = 8,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "1234",
                            ItemDescription = "Vault lights"
                        },
                        new
                        {
                            InspectionItemID = 38,
                            CategoryID = 3,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Roof escape hatch"
                        },
                        new
                        {
                            InspectionItemID = 39,
                            CategoryID = 3,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "134",
                            ItemDescription = "Side door and escape route (full alarm immobilisation)"
                        },
                        new
                        {
                            InspectionItemID = 40,
                            CategoryID = 3,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Roof hatch spin bolts"
                        },
                        new
                        {
                            InspectionItemID = 41,
                            CategoryID = 3,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Door escape spin bolts"
                        },
                        new
                        {
                            InspectionItemID = 42,
                            CategoryID = 3,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Sounder Button (siren only)"
                        },
                        new
                        {
                            InspectionItemID = 43,
                            CategoryID = 3,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Vault 1 door open"
                        },
                        new
                        {
                            InspectionItemID = 44,
                            CategoryID = 3,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Vault 2 door open (cab module warn lamp operates)"
                        },
                        new
                        {
                            InspectionItemID = 45,
                            CategoryID = 4,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Warning lights working correctly"
                        },
                        new
                        {
                            InspectionItemID = 46,
                            CategoryID = 4,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Internal sounder operates"
                        },
                        new
                        {
                            InspectionItemID = 47,
                            CategoryID = 4,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Operation of custodian key switch"
                        },
                        new
                        {
                            InspectionItemID = 48,
                            CategoryID = 5,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "No operation of doors/vaults door"
                        },
                        new
                        {
                            InspectionItemID = 49,
                            CategoryID = 5,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Hi-jack reset function"
                        },
                        new
                        {
                            InspectionItemID = 50,
                            CategoryID = 5,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Drivers door/airlock open"
                        },
                        new
                        {
                            InspectionItemID = 51,
                            CategoryID = 5,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Passenger door/airlock open"
                        },
                        new
                        {
                            InspectionItemID = 52,
                            CategoryID = 5,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Vault 1 door open"
                        },
                        new
                        {
                            InspectionItemID = 53,
                            CategoryID = 5,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Vault 2 door open"
                        },
                        new
                        {
                            InspectionItemID = 54,
                            CategoryID = 5,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Immobilisation (alarms activate mayday sent)"
                        },
                        new
                        {
                            InspectionItemID = 55,
                            CategoryID = 5,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Access limited 816"
                        },
                        new
                        {
                            InspectionItemID = 56,
                            CategoryID = 5,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Reset on key"
                        },
                        new
                        {
                            InspectionItemID = 57,
                            CategoryID = 6,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Tacho distance/speed activates"
                        },
                        new
                        {
                            InspectionItemID = 58,
                            CategoryID = 6,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Rear door opening"
                        },
                        new
                        {
                            InspectionItemID = 59,
                            CategoryID = 6,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "3",
                            ItemDescription = "Smoke cloak operation"
                        },
                        new
                        {
                            InspectionItemID = 60,
                            CategoryID = 6,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "34",
                            ItemDescription = "Distance travelled in TRUNK Mode"
                        },
                        new
                        {
                            InspectionItemID = 61,
                            CategoryID = 6,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "1234",
                            ItemDescription = "Check external Kaba key readers and cover condition"
                        },
                        new
                        {
                            InspectionItemID = 62,
                            CategoryID = 6,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "14",
                            ItemDescription = "Check entrance door lock operation and inner striker condition, check OEM check strap"
                        },
                        new
                        {
                            InspectionItemID = 63,
                            CategoryID = 6,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "1234",
                            ItemDescription = "Check internal escape overrides on cab doors, realign if required"
                        },
                        new
                        {
                            InspectionItemID = 64,
                            CategoryID = 6,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "14",
                            ItemDescription = "Test drop safe operation, and backplate is present and secure"
                        },
                        new
                        {
                            InspectionItemID = 65,
                            CategoryID = 6,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "14",
                            ItemDescription = "Check safe doors operation and backplate is present and secure"
                        },
                        new
                        {
                            InspectionItemID = 66,
                            CategoryID = 6,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "14",
                            ItemDescription = "Check rear coin area condition and divider secure"
                        },
                        new
                        {
                            InspectionItemID = 67,
                            CategoryID = 6,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "1234",
                            ItemDescription = "Check Vehicle & auxiliary battery condition, drop test"
                        },
                        new
                        {
                            InspectionItemID = 68,
                            CategoryID = 6,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "14",
                            ItemDescription = "Check all emergency security plates are present and secure"
                        },
                        new
                        {
                            InspectionItemID = 69,
                            CategoryID = 6,
                            InspectionTypeID = 0,
                            InspectionTypeIndicator = "1234",
                            ItemDescription = "Lubricate locks and components as required"
                        });
                });

            modelBuilder.Entity("FCDBApp.Models.InspectionTable", b =>
                {
                    b.Property<Guid>("InspectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BranchManagerSignatureID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EngineerSignatureID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InspectionTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("NextInspectionDue")
                        .HasColumnType("datetime2");

                    b.Property<int>("Odometer")
                        .HasColumnType("int");

                    b.Property<string>("PassFailStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SiteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("VehicleReg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InspectionID");

                    b.ToTable("InspectionTables");
                });

            modelBuilder.Entity("FCDBApp.Models.InspectionType", b =>
                {
                    b.Property<int>("InspectionTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InspectionTypeID"));

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InspectionTypeID");

                    b.ToTable("InspectionTypes");

                    b.HasData(
                        new
                        {
                            InspectionTypeID = 1,
                            Frequency = "every 8 weeks or every 4 weeks",
                            TypeName = "OPV - every 8 Weeks or ExSSG - every 4 weeks"
                        },
                        new
                        {
                            InspectionTypeID = 2,
                            Frequency = "every 26 weeks",
                            TypeName = "Coin vehicles - every 26 weeks"
                        },
                        new
                        {
                            InspectionTypeID = 3,
                            Frequency = "every 4 weeks",
                            TypeName = "Trunkers - every 4 weeks"
                        },
                        new
                        {
                            InspectionTypeID = 4,
                            Frequency = "every 8 weeks or every 4 weeks",
                            TypeName = "CIT - every 8 weeks or 816 - every 4 weeks"
                        });
                });

            modelBuilder.Entity("FCDBApp.Models.JobCard", b =>
                {
                    b.Property<Guid>("JobCardID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchManagerSignatureID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustOrderNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Engineer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EngineerSignatureID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JobNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Odometer")
                        .HasColumnType("bigint");

                    b.Property<string>("RegNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Site")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmissionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobCardID");

                    b.HasIndex("BranchManagerSignatureID");

                    b.HasIndex("EngineerSignatureID");

                    b.ToTable("JobCards");
                });

            modelBuilder.Entity("FCDBApp.Models.PartUsed", b =>
                {
                    b.Property<Guid>("PartUsedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("JobCardID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PartUsedID");

                    b.HasIndex("JobCardID");

                    b.ToTable("PartsUsed");
                });

            modelBuilder.Entity("FCDBApp.Models.PartsList", b =>
                {
                    b.Property<Guid>("PartsListID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartsListID");

                    b.ToTable("PartsList");
                });

            modelBuilder.Entity("FCDBApp.Models.Signature", b =>
                {
                    b.Property<Guid>("SignatureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Print")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatoryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("SignatureImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("SignatureID");

                    b.ToTable("Signatures");
                });

            modelBuilder.Entity("FCDBApp.Models.Site", b =>
                {
                    b.Property<int>("SiteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiteID"));

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SiteID");

                    b.ToTable("Sites", (string)null);

                    b.HasData(
                        new
                        {
                            SiteID = 1,
                            SiteName = "Birmingham Loomis"
                        },
                        new
                        {
                            SiteID = 2,
                            SiteName = "Colchester Loomis"
                        },
                        new
                        {
                            SiteID = 3,
                            SiteName = "Dagenham Loomis"
                        },
                        new
                        {
                            SiteID = 4,
                            SiteName = "Dunstable Loomis"
                        },
                        new
                        {
                            SiteID = 5,
                            SiteName = "Edinburgh Loomis"
                        },
                        new
                        {
                            SiteID = 6,
                            SiteName = "Elgin Loomis"
                        },
                        new
                        {
                            SiteID = 7,
                            SiteName = "Exeter Loomis"
                        },
                        new
                        {
                            SiteID = 8,
                            SiteName = "Glasgow Loomis"
                        },
                        new
                        {
                            SiteID = 9,
                            SiteName = "Heathrow Loomis"
                        },
                        new
                        {
                            SiteID = 10,
                            SiteName = "Leeds Loomis"
                        },
                        new
                        {
                            SiteID = 11,
                            SiteName = "Maidstone Loomis"
                        },
                        new
                        {
                            SiteID = 12,
                            SiteName = "Manchester Loomis"
                        },
                        new
                        {
                            SiteID = 13,
                            SiteName = "Newcastle Loomis"
                        },
                        new
                        {
                            SiteID = 14,
                            SiteName = "Newport Loomis"
                        },
                        new
                        {
                            SiteID = 15,
                            SiteName = "Nottingham Loomis"
                        },
                        new
                        {
                            SiteID = 16,
                            SiteName = "Shepperton Loomis"
                        });
                });

            modelBuilder.Entity("FCDBApp.Models.TemplateFile", b =>
                {
                    b.Property<int>("TemplateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemplateID"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("TemplateData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TemplateID");

                    b.ToTable("TemplateFiles");
                });

            modelBuilder.Entity("FCDBApp.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FCDBApp.Models.Document", b =>
                {
                    b.HasOne("FCDBApp.Models.DocumentCategory", "DocumentCategory")
                        .WithMany("Documents")
                        .HasForeignKey("DocumentCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentCategory");
                });

            modelBuilder.Entity("FCDBApp.Models.InspectionDetails", b =>
                {
                    b.HasOne("FCDBApp.Models.InspectionTable", "Inspection")
                        .WithMany("Details")
                        .HasForeignKey("InspectionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FCDBApp.Models.InspectionItems", "Item")
                        .WithMany()
                        .HasForeignKey("InspectionItemID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Inspection");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("FCDBApp.Models.InspectionItems", b =>
                {
                    b.HasOne("FCDBApp.Models.InspectionCategories", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FCDBApp.Models.InspectionType", "InspectionType")
                        .WithMany("Items")
                        .HasForeignKey("InspectionTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("InspectionType");
                });

            modelBuilder.Entity("FCDBApp.Models.JobCard", b =>
                {
                    b.HasOne("FCDBApp.Models.Signature", null)
                        .WithMany()
                        .HasForeignKey("BranchManagerSignatureID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCDBApp.Models.Signature", null)
                        .WithMany()
                        .HasForeignKey("EngineerSignatureID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCDBApp.Models.PartUsed", b =>
                {
                    b.HasOne("FCDBApp.Models.JobCard", null)
                        .WithMany("PartsUsed")
                        .HasForeignKey("JobCardID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("FCDBApp.Models.DocumentCategory", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("FCDBApp.Models.InspectionCategories", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("FCDBApp.Models.InspectionTable", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("FCDBApp.Models.InspectionType", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("FCDBApp.Models.JobCard", b =>
                {
                    b.Navigation("PartsUsed");
                });
#pragma warning restore 612, 618
        }
    }
}
