@page "{id:guid}/{inspectionTypeId:int}"
@model FCDBApi.Pages.InspectionSheets.EditModel

@{
    ViewData["Title"] = "Edit Inspection Sheet";
}

<h1>Edit Inspection Sheet</h1>

<h4>InspectionTable</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" onsubmit="handleFormSubmit(event)">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="InspectionTable.Branch" class="control-label"></label>
                <select asp-for="InspectionTable.Branch" class="form-control" id="branchDropdown" onchange="handleBranchChange(event)">
                    <option value="">-- Select Branch --</option>
                    @foreach (var site in Model.Sites)
                    {
                        <option value="@site.SiteName">@site.SiteName</option>
                    }
                    <option value="AddNew">Add New</option>
                </select>
                <span asp-validation-for="InspectionTable.Branch" class="text-danger"></span>
            </div>
            <div class="form-group" id="newBranchDiv" style="display:none;">
                <label for="newBranchName">New Branch Name</label>
                <input type="text" id="newBranchName" name="newBranchName" class="form-control" />
            </div>
            <input type="hidden" asp-for="InspectionTable.SiteID" id="siteIDField" />
            <div class="form-group">
                <label asp-for="InspectionTable.VehicleReg" class="control-label"></label>
                <input asp-for="InspectionTable.VehicleReg" class="form-control" />
                <span asp-validation-for="InspectionTable.VehicleReg" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InspectionTable.VehicleType" class="control-label"></label>
                <input asp-for="InspectionTable.VehicleType" class="form-control" />
                <span asp-validation-for="InspectionTable.VehicleType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InspectionTable.Odometer" class="control-label"></label>
                <input asp-for="InspectionTable.Odometer" class="form-control" />
                <span asp-validation-for="InspectionTable.Odometer" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InspectionTable.InspectionDate" class="control-label"></label>
                <input asp-for="InspectionTable.InspectionDate" class="form-control" />
                <span asp-validation-for="InspectionTable.InspectionDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InspectionTable.NextInspectionDue" class="control-label"></label>
                <input asp-for="InspectionTable.NextInspectionDue" class="form-control" />
                <span asp-validation-for="InspectionTable.NextInspectionDue" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="InspectionTable.InspectionID" />
            <input type="hidden" asp-for="InspectionTable.InspectionTypeID" />

            <div>
                <h4>Inspection Items</h4>
                <div id="inspectionItems">
                    @if (Model.InspectionCategories != null && Model.InspectionCategories.Any())
                    {
                        @foreach (var category in Model.InspectionCategories)
                        {
                            var categoryItems = category.Items.Where(i => i.InspectionTypeIndicator.Contains(Model.InspectionTypeId.ToString())).ToList();
                            if (categoryItems.Any())
                            {
                                <div class="category">
                                    <h5>@category.CategoryName</h5>
                                    <div class="items">
                                        @foreach (var item in categoryItems)
                                        {
                                            var detail = Model.InspectionTable.Details.FirstOrDefault(d => d.InspectionItemID == item.InspectionItemID);
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="y" id="item_@item.InspectionItemID" name="InspectionTable.Details[@item.InspectionItemID].Result" @(detail?.Result == "y" ? "checked" : "") />
                                                <label class="form-check-label" for="item_@item.InspectionItemID">@item.ItemDescription</label>
                                                <input type="hidden" name="InspectionTable.Details[@item.InspectionItemID].Result" value="n" />
                                            </div>
                                            <div class="form-group">
                                                <label for="comments_@item.InspectionItemID">Comments</label>
                                                <textarea class="form-control" id="comments_@item.InspectionItemID" name="InspectionTable.Details[@item.InspectionItemID].Comments">@detail?.Comments</textarea>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        }
                    }
                    else
                    {
                        <p>No inspection items available for the selected type.</p>
                    }
                </div>
            </div>
            <div class="form-group">
                <label asp-for="InspectionTable.PassFailStatus" class="control-label"></label>
                <select asp-for="InspectionTable.PassFailStatus" class="form-control">
                    <option value="Pass">Pass</option>
                    <option value="Fail">Fail</option>
                </select>
                <span asp-validation-for="InspectionTable.PassFailStatus" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-page="Index" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    <script>
        function handleFormSubmit(event) {
            const branchSelect = document.getElementById('branchDropdown');
            const siteIDField = document.getElementById('siteIDField');
            const branchNameField = document.getElementById('branchNameField');
            const newSiteName = document.getElementById('newBranchName').value;

            if (newSiteName) {
                siteIDField.value = ''; // Ensure the site ID is empty if a new site is being added
                branchNameField.value = newSiteName;
            } else {
                branchNameField.value = branchSelect.value;
                const selectedOption = branchSelect.options[branchSelect.selectedIndex].text;
                siteIDField.value = branchSelect.value; // Correctly set the site ID value
            }
        }

        function handleBranchChange(event) {
            const newBranchDiv = document.getElementById('newBranchDiv');
            if (event.target.value === "AddNew") {
                newBranchDiv.style.display = 'block';
            } else {
                newBranchDiv.style.display = 'none';
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            const branchDropdown = document.getElementById("branchDropdown");
            const selectedBranch = "@Model.InspectionTable.Branch";
            if (selectedBranch) {
                for (let i = 0; i < branchDropdown.options.length; i++) {
                    if (branchDropdown.options[i].text === selectedBranch) {
                        branchDropdown.selectedIndex = i;
                        break;
                    }
                }
            }
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
