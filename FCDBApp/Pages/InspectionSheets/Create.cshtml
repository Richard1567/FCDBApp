@page "{inspectionTypeId:int}"
@model FCDBApi.Pages.InspectionSheets.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>InspectionTable</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" onsubmit="handleFormSubmit(event)">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="InspectionTable.Branch" class="control-label"></label>
                @if (Model.Sites != null && Model.Sites.Any())
                {
                    <select asp-for="InspectionTable.Branch" class="form-control" asp-items="@(new SelectList(Model.Sites, "SiteName", "SiteName"))" id="branchDropdown" onchange="handleBranchChange(event)">
                        <option value="">-- Select Branch --</option>
                        <option value="AddNew">Add New</option>
                    </select>
                }
                else
                {
                    <select asp-for="InspectionTable.Branch" class="form-control" id="branchDropdown" onchange="handleBranchChange(event)">
                        <option value="">No branches available</option>
                        <option value="AddNew">Add New</option>
                    </select>
                }
                <span asp-validation-for="InspectionTable.Branch" class="text-danger"></span>
            </div>

            <!-- New Branch TextBox -->
            <div class="form-group" id="newBranchDiv" style="display:none;">
                <label for="newBranchName">New Branch Name</label>
                <input type="text" id="newBranchName" name="newBranchName" class="form-control" />
            </div>

            <!-- Hidden SiteID Field -->
            <input type="hidden" asp-for="InspectionTable.SiteID" />

            <div class="form-group">
                <label asp-for="InspectionTable.VehicleReg" class="control-label"></label>
                <input asp-for="InspectionTable.VehicleReg" class="form-control" />
                <span asp-validation-for="InspectionTable.VehicleReg" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InspectionTable.VehicleType" class="control-label"></label>
                <input asp-for="InspectionTable.VehicleType" class="form-control" />
                <span asp-validation-for="InspectionTable.VehicleType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InspectionTable.InspectionDate" class="control-label"></label>
                <input asp-for="InspectionTable.InspectionDate" class="form-control" />
                <span asp-validation-for="InspectionTable.InspectionDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InspectionTable.NextInspectionDue" class="control-label"></label>
                <input asp-for="InspectionTable.NextInspectionDue" class="form-control" />
                <span asp-validation-for="InspectionTable.NextInspectionDue" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InspectionTable.Odometer" class="control-label"></label>
                <input asp-for="InspectionTable.Odometer" class="form-control" />
                <span asp-validation-for="InspectionTable.Odometer" class="text-danger"></span>
            </div>

            <input type="hidden" asp-for="InspectionTable.InspectionTypeID" />
            <input type="hidden" asp-for="InspectionTable.SubmissionTime" value="@DateTime.Now" />

            <div>
                <h4>Inspection Items</h4>
                <div id="inspectionItems">
                    @if (Model.InspectionCategories != null && Model.InspectionCategories.Any())
                    {
                        @foreach (var category in Model.InspectionCategories)
                        {
                            var categoryItems = category.Items.Where(i => i.InspectionTypeIndicator.Contains(Model.InspectionTypeId.ToString())).ToList();
                            if (categoryItems.Any())
                            {
                                <div class="category">
                                    <h5>@category.CategoryName</h5>
                                    <div class="items">
                                        @foreach (var item in categoryItems)
                                        {
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="y" id="item_@item.InspectionItemID" name="InspectionTable.Details[@item.InspectionItemID].Result" />
                                                <label class="form-check-label" for="item_@item.InspectionItemID">@item.ItemDescription</label>
                                            </div>
                                            <div class="form-group">
                                                <label for="comments_@item.InspectionItemID">Comments</label>
                                                <textarea class="form-control" id="comments_@item.InspectionItemID" name="InspectionTable.Details[@item.InspectionItemID].Comments"></textarea>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        }
                    }
                    else
                    {
                        <p>No inspection items available for the selected type.</p>
                    }
                </div>
            </div>
            <div class="form-group">
                <label asp-for="InspectionTable.PassFailStatus" class="control-label"></label>
                <select asp-for="InspectionTable.PassFailStatus" class="form-control">
                    <option value="Pass">Pass</option>
                    <option value="Fail">Fail</option>
                </select>
                <span asp-validation-for="InspectionTable.PassFailStatus" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="EngineerPrint">Engineer Print</label>
                <input type="text" id="EngineerPrint" name="EngineerPrint" class="form-control" required />
            </div>
            <div class="form-group">
                <label>Engineer Signature</label>
                <canvas id="engineerSignaturePad" class="signature-pad"></canvas>
                <button type="button" onclick="clearSignaturePad('engineerSignaturePad')">Clear</button>
                <input type="hidden" id="EngineerSignature" name="EngineerSignature" />
            </div>
            <div class="form-group">
                <label for="BranchManagerPrint">Branch Manager Print</label>
                <input type="text" id="BranchManagerPrint" name="BranchManagerPrint" class="form-control" />
            </div>
            <div class="form-group">
                <label>Branch Manager Signature (Optional)</label>
                <canvas id="branchManagerSignaturePad" class="signature-pad"></canvas>
                <button type="button" onclick="clearSignaturePad('branchManagerSignaturePad')">Clear</button>
                <input type="hidden" id="BranchManagerSignature" name="BranchManagerSignature" />
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/signature_pad@2.3.2/dist/signature_pad.min.js"></script>
    <script>
        var engineerSignaturePad = new SignaturePad(document.getElementById('engineerSignaturePad'));
        var branchManagerSignaturePad = new SignaturePad(document.getElementById('branchManagerSignaturePad'));

        function clearSignaturePad(padId) {
            if (padId === 'engineerSignaturePad') {
                engineerSignaturePad.clear();
            } else if (padId === 'branchManagerSignaturePad') {
                branchManagerSignaturePad.clear();
            }
        }

        function handleFormSubmit(event) {
            // Save signatures
            document.getElementById('EngineerSignature').value = engineerSignaturePad.toDataURL();
            document.getElementById('BranchManagerSignature').value = branchManagerSignaturePad.toDataURL();

            // Get all checkboxes and their corresponding hidden fields
            const checkboxes = document.querySelectorAll('input[type="checkbox"]');
            checkboxes.forEach(checkbox => {
                if (!checkbox.checked) {
                    // If the checkbox is not checked, ensure a hidden field with "n" is added
                    const hiddenField = document.createElement('input');
                    hiddenField.type = 'hidden';
                    hiddenField.name = checkbox.name;
                    hiddenField.value = 'n';
                    checkbox.form.appendChild(hiddenField);
                }
            });
        }

        function handleBranchChange(event) {
            const newBranchDiv = document.getElementById('newBranchDiv');
            if (event.target.value === "AddNew") {
                newBranchDiv.style.display = 'block';
            } else {
                newBranchDiv.style.display = 'none';
            }
        }
    </script>
}
