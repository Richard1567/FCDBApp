@page
@model FCDBApi.Pages.JobCards.CreateModel

@{
    ViewData["Title"] = "Create Job Card";
}

<h1>Create Job Card</h1>

<h4>Job Card</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" onsubmit="handleFormSubmit(event)">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="JobCard.JobNo" class="control-label"></label>
                <input asp-for="JobCard.JobNo" class="form-control" />
                <span asp-validation-for="JobCard.JobNo" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="JobCard.Site" class="control-label"></label>
                @if (Model.Sites != null && Model.Sites.Any())
                {
                    <select asp-for="JobCard.Site" class="form-control site-dropdown" id="siteDropdown" onchange="handleSiteChange(event)">
                        <option value="">-- Select Site --</option>
                        @foreach (var site in Model.Sites)
                        {
                            <option value="@site.SiteName">@site.SiteName</option>
                        }
                        <option value="AddNew">Add New</option>
                    </select>
                }
                else
                {
                    <select asp-for="JobCard.Site" class="form-control" id="siteDropdown" onchange="handleSiteChange(event)">
                        <option value="">No sites available</option>
                        <option value="AddNew">Add New</option>
                    </select>
                }
                <span asp-validation-for="JobCard.Site" class="text-danger"></span>
            </div>

            <div class="form-group new-site-input" style="display:none;">
                <label asp-for="NewSiteName" class="control-label"></label>
                <input asp-for="NewSiteName" class="form-control" />
                <span asp-validation-for="NewSiteName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="JobCard.Engineer" class="control-label"></label>
                <input asp-for="JobCard.Engineer" class="form-control" />
                <span asp-validation-for="JobCard.Engineer" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="JobCard.RegNo" class="control-label"></label>
                <input asp-for="JobCard.RegNo" class="form-control" />
                <span asp-validation-for="JobCard.RegNo" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="JobCard.CustOrderNo" class="control-label"></label>
                <input asp-for="JobCard.CustOrderNo" class="form-control" />
                <span asp-validation-for="JobCard.CustOrderNo" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="JobCard.Odometer" class="control-label"></label>
                <input asp-for="JobCard.Odometer" class="form-control" />
                <span asp-validation-for="JobCard.Odometer" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="JobCard.Date" class="control-label"></label>
                <input asp-for="JobCard.Date" class="form-control" type="date" />
                <span asp-validation-for="JobCard.Date" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="JobCard.StartTime" class="control-label">Start Time</label>
                <input asp-for="JobCard.StartTime" class="form-control" type="time" />
                <span asp-validation-for="JobCard.StartTime" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="JobCard.EndTime" class="control-label">End Time</label>
                <input asp-for="JobCard.EndTime" class="form-control" type="time" />
                <span asp-validation-for="JobCard.EndTime" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="JobCard.Description" class="control-label"></label>
                <textarea asp-for="JobCard.Description" class="form-control"></textarea>
                <span asp-validation-for="JobCard.Description" class="text-danger"></span>
            </div>

            <h4>Parts Used</h4>
            <div id="partsUsedContainer">
                @for (int i = 0; i < Model.PartsUsed.Count; i++)
                {
                    <div class="form-group part-used-item">
                        <div>
                            <label asp-for="PartsUsed[i].Name" class="control-label"></label>
                            <select asp-for="PartsUsed[i].Name" class="form-control parts-dropdown">
                                <option value="">Select a part</option>
                                @foreach (var part in Model.PartsList)
                                {
                                    <option value="@part.Name" data-part-number="@part.PartNumber">@part.Name</option>
                                }
                                <option value="__add_new__">Add New Part</option>
                            </select>
                            <span asp-validation-for="PartsUsed[i].Name" class="text-danger"></span>
                        </div>

                        <div>
                            <label asp-for="PartsUsed[i].PartNumber" class="control-label"></label>
                            <input asp-for="PartsUsed[i].PartNumber" class="form-control part-number" readonly />
                            <span asp-validation-for="PartsUsed[i].PartNumber" class="text-danger"></span>
                        </div>

                        <div>
                            <label asp-for="PartsUsed[i].Quantity" class="control-label"></label>
                            <input asp-for="PartsUsed[i].Quantity" class="form-control" />
                            <span asp-validation-for="PartsUsed[i].Quantity" class="text-danger"></span>
                        </div>

                        <div>
                            <label asp-for="PartsUsed[i].Category" class="control-label"></label>
                            <select asp-for="PartsUsed[i].Category" class="form-control">
                                <option value="V.O.R">V.O.R</option>
                                <option value="Urgent">Urgent</option>
                                <option value="Next Service">Next Service</option>
                            </select>
                            <span asp-validation-for="PartsUsed[i].Category" class="text-danger"></span>
                        </div>

                        <input type="hidden" asp-for="PartsUsed[i].PartUsedID" />
                        <input type="hidden" asp-for="PartsUsed[i].JobCardID" />

                        <button type="button" class="btn btn-danger remove-part-button">Remove</button>
                    </div>
                }
            </div>
            <input type="hidden" asp-for="JobCard.RowVersion" /> <!-- Include RowVersion -->
            <button type="button" id="addPartButton" class="btn btn-secondary">Add Part</button>

            <h4>Engineer Signature</h4>
            <div class="form-group">
                <label asp-for="EngineerPrint" class="control-label"></label>
                <input asp-for="EngineerPrint" class="form-control" />
                <span asp-validation-for="EngineerPrint" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="engineerSignaturePad" class="control-label">Engineer Signature</label>
                <canvas id="engineerSignaturePad" class="signature-pad"></canvas>
                <button type="button" class="btn btn-secondary" onclick="clearSignature('engineerSignaturePad')">Clear</button>
                <input type="hidden" id="EngineerSignature" name="EngineerSignature" />
            </div>

            <h4>Branch Manager Signature</h4>
            <div class="form-group">
                <label asp-for="BranchManagerPrint" class="control-label"></label>
                <input asp-for="BranchManagerPrint" class="form-control" />
                <span asp-validation-for="BranchManagerPrint" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="branchManagerSignaturePad" class="control-label">Branch Manager Signature</label>
                <canvas id="branchManagerSignaturePad" class="signature-pad"></canvas>
                <button type="button" class="btn btn-secondary" onclick="clearSignature('branchManagerSignaturePad')">Clear</button>
                <input type="hidden" id="BranchManagerSignature" name="BranchManagerSignature" />
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/signature_pad@2.3.2/dist/signature_pad.min.js"></script>
    <script type="text/javascript">
        document.getElementById('addPartButton').addEventListener('click', function () {
            var container = document.getElementById('partsUsedContainer');
            var index = container.querySelectorAll('.part-used-item').length;
            var jobCardID = '@Model.JobCard.JobCardID';
            var template = `
                        <div class="form-group part-used-item">
                            <div>
                                <label for="PartsUsed_${index}__Name" class="control-label">Name</label>
                                <select class="form-control parts-dropdown" id="PartsUsed_${index}__Name" name="PartsUsed[${index}].Name">
                                    <option value="">Select a part</option>
        @foreach (var part in Model.PartsList)
        {
                                            <option value="@part.Name" data-part-number="@part.PartNumber">@part.Name</option>
        }
                                    <option value="__add_new__">Add New Part</option>
                                </select>
                            </div>
                            <div>
                                <label for="PartsUsed_${index}__PartNumber" class="control-label">Part Number</label>
                                <input class="form-control part-number" type="text" id="PartsUsed_${index}__PartNumber" name="PartsUsed[${index}].PartNumber" readonly>
                            </div>
                            <div>
                                <label for="PartsUsed_${index}__Quantity" class="control-label">Quantity</label>
                                <input class="form-control" type="number" id="PartsUsed_${index}__Quantity" name="PartsUsed[${index}].Quantity">
                            </div>
                            <div>
                                <label for="PartsUsed_${index}__Category" class="control-label">Category</label>
                                <select class="form-control" id="PartsUsed_${index}__Category" name="PartsUsed[${index}].Category">
                                    <option value="V.O.R">V.O.R</option>
                                    <option value="Urgent">Urgent</option>
                                    <option value="Next Service">Next Service</option>
                                </select>
                            </div>
                            <input type="hidden" id="PartsUsed_${index}__PartUsedID" name="PartsUsed[${index}].PartUsedID" value="${newGuid()}">
                            <input type="hidden" id="PartsUsed_${index}__JobCardID" name="PartsUsed[${index}].JobCardID" value="${jobCardID}">
                            <button type="button" class="btn btn-danger remove-part-button">Remove</button>
                        </div>
                    `;
            container.insertAdjacentHTML('beforeend', template);
            addRemoveButtonEvent();
            addDropdownChangeEvent();
        });

        function addRemoveButtonEvent() {
            document.querySelectorAll('.remove-part-button').forEach(button => {
                button.addEventListener('click', function () {
                    this.closest('.part-used-item').remove();
                });
            });
        }

        function addDropdownChangeEvent() {
            document.querySelectorAll('.parts-dropdown').forEach(dropdown => {
                dropdown.addEventListener('change', function () {
                    if (this.value === "__add_new__") {
                        $('#addPartModal').modal('show');
                        return;
                    }
                    var partNumberInput = this.closest('.part-used-item').querySelector('.part-number');
                    var selectedOption = this.options[this.selectedIndex];
                    partNumberInput.value = selectedOption.getAttribute('data-part-number');
                });
            });
        }

        function newGuid() {
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }

        // Initialize remove buttons and dropdown change events
        addRemoveButtonEvent();
        addDropdownChangeEvent();

        var engineerSignaturePad = new SignaturePad(document.getElementById('engineerSignaturePad'));
        var branchManagerSignaturePad = new SignaturePad(document.getElementById('branchManagerSignaturePad'));

        function clearSignature(padId) {
            if (padId === 'engineerSignaturePad') {
                engineerSignaturePad.clear();
            } else if (padId === 'branchManagerSignaturePad') {
                branchManagerSignaturePad.clear();
            }
        }

        function handleFormSubmit(event) {
            // Prevent the default form submission
            event.preventDefault();

            // Save signatures
            document.getElementById('EngineerSignature').value = engineerSignaturePad.toDataURL();
            document.getElementById('BranchManagerSignature').value = branchManagerSignaturePad.toDataURL();

            // Confirm data in console, then submit form
            event.target.submit();
        }

        function handleSiteChange(event) {
            const newSiteDiv = document.querySelector('.new-site-input');
            if (event.target.value === "AddNew") {
                newSiteDiv.style.display = 'block';
            } else {
                newSiteDiv.style.display = 'none';
            }
        }
    </script>
}
